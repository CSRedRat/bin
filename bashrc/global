export PATH=$PATH:~/bin

export CLICOLOR=1
export GREP_OPTIONS="--color=auto"
export HISTCONTROL=erasedups
export HISTIGNORE="&:l:exit:clear:cd:cd :cd ..:..:...:....:pwd"
export LC_CTYPE=en_US.UTF-8
export LESS='-R --LONG-PROMPT --hilite-unread --tabs=4 --tilde --window=-4 --prompt=M ?f"%f" ?m[%i/%m]. | .?lbLine %lb?L of %L..?PB (%PB\%).?e (END). '

export LSCOLORS=ExfxcxdxBxehbdabagacad
export LS_COLORS='rs=0:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:'
export LS_OPTIONS='--color=auto'

alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

alias du='du -h -d 1'
alias gitclone='git clone --depth 1 --recursive'
alias gitupdate='git pull && git submodule update && git gc --auto'
alias giturl='git config --get remote.origin.url'
alias h='history'
alias hs='historys'
alias l='ls -Alph'
alias lr='l -R'
alias rmmr='rmmacres.sh --dsstore --forks'
alias ss='shiftsearch'
alias yuicompressor='java -jar ~/bin/yuicompressor.jar'

getvars() { set | egrep '^[a-zA-Z0-9_]+='; }
export -f getvars
printvar() { for a in "$@"; do echo -e "$a=${!a}"; done; }
export -f printvar

countfiles() { for a in "${@:-.}"; do echo -n "$a"; find "$a" | wc -l; done; }
countlines() { (find "${1:-$PWD}" -type f \! -regex ".*/\.svn/.*" -exec bash -c '[[ `file -b --mime-type {}` =~ ^text/ ]]' \; -print | while read f; do cat "$f"; done) | wc -l; }
findname() { local n="$1"; shift; find . -type f -iname "*$n*" $@; }
findregex() { local n="$1"; shift; find . -regex "$n" $@; }
historys() { [[ ${#} < 1 ]] && history || history | grep -i "$*"; }
locatefile() { locate "$@" | grep -e "$@$"; }
mkd() { mkdir -p "$@" && eval cd "\"\$$#\""; }
pss() { [[ ${#} < 1 ]] && ps -lAww || ps aux | grep -i "$*"; }
resetfile() { for f in "$@"; do local t=$(mktemp -t resetfile) && mv "$f" "$t" && cat "$t" > "$f" && touch -r "$t" "$f"; done; }

ascii2dec() { printf '%d' "'$1"; }  # converts ASCII character to its decimal value
ascii2hex() { printf '%x' "'$1"; }  # converts ASCII character to a hexadecimal value
dec2ascii() { printf \\$(($1/64*100+$1%64/8*10+$1%8)); }    # converts decimal value to its ASCII character representation
hex2ascii() { printf \\x"$1"; }     # converts a hexadecimal value to an ASCII character

[ -z "$PS1" ] && return

export PS1='\[\e]0;\h:\W\007\]\[\e[0;92m\]\h\[\e[97m\]:\[\e[93m\]\W\[\e[m\] \[\e[32m\]\$\[\e[m\] '

#export CDPATH=.:~
shopt -s cdspell
tabs -4
