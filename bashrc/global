export PATH=$PATH:~/bin
export CLICOLOR=1
export GREP_OPTIONS="--color=auto"
export HISTCONTROL=erasedups
export HISTIGNORE="&:l:exit:clear:cd:cd :cd ..:..:...:....:pwd"
export LC_CTYPE=en_US.UTF-8
export LESS='-R --LONG-PROMPT --hilite-unread --tabs=4 --tilde --window=-3 --prompt=M ?f"%f" ?m[%i/%m]. | .?lbLine %lb?L of %L..?PB (%PB\%).?e (END). '

alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

alias du='du -h --max-depth=1'
alias gitclone='git clone --depth 1 --recursive'
alias gitupdate='git pull && git submodule update && git gc --auto'
alias giturl='git config --get remote.origin.url'
alias h='history'
alias hs='historys'
alias l='ls -Alph'
alias ld='lsdirs'
alias lr='l -R'
alias rmmr='rmmacres.sh --dsstore --forks'
alias ss='shiftsearch'
alias yuicompressor='java -jar ~/bin/yuicompressor.jar'

getvars() { set | egrep '^[a-zA-Z0-9_]+='; }
export -f getvars
printvar() { for a in "$@"; do echo -e "$a=${!a}"; done; }
export -f printvar

countfiles() { for a in "${@:-.}"; do echo -n "$a"; find "$a" | wc -l; done; }
countlines() { (find "${1:-$PWD}" -type f \! -regex ".*/\.svn/.*" -exec bash -c '[[ `file -b --mime-type {}` =~ ^text/ ]]' \; -print | while read f; do cat "$f"; done) | wc -l; }
findname() { local n="$1"; shift; find . -type f -iname "*$n*" $@; }
findregex() { local n="$1"; shift; find . -regex "$n" $@; }
historys() { [[ ${#} < 1 ]] && history || history | grep -i "$*"; }
locatefile() { locate "$@" | grep -e "$@$"; }
lsdirs() { local d=`basename "$PWD"`; ( cd .. && find "$d" -type d -print ); }
mkd() { mkdir -p "$@" && eval cd "\"\$$#\""; }
pss() { [[ ${#} < 1 ]] && ps aux || ps aux | grep -i "$*"; }
stringRepeat() { for (( c=1; c<=$2; c++)) ; do printf "$1" ; done; }

isAlias() { [[ "`type -t $@`" == "alias" ]]; }
isBuiltin() { [[ "`type -t $@`" == "builtin" ]]; }
isFunction() { [[ "`type -t $@`" == "function" ]]; }

ascii2dec() { printf '%d' "'$1"; }  # converts ASCII character to its decimal value
ascii2hex() { printf '%x' "'$1"; }  # converts ASCII character to a hexadecimal value
dec2ascii() { printf \\$(($1/64*100+$1%64/8*10+$1%8)); }    # converts decimal value to its ASCII character representation
hex2ascii() { printf \\x"$1"; }     # converts a hexadecimal value to an ASCII character

[ -z "$PS1" ] && return

export PS1='\[\e]0;\h:\W\007\]\[\e[0;92m\]\h\[\e[97m\]:\[\e[93m\]\W\[\e[m\] \[\e[32m\]\$\[\e[m\] '

#export CDPATH=.:~
shopt -s cdspell
tabs -4
