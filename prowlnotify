#!/usr/bin/env bash
SCRIPT_NAME="prowlnotify"
SCRIPT_VERSION="1.1.4 2012-03-21"

usage() {
cat <<EOF
$SCRIPT_NAME $SCRIPT_VERSION
Interface to prowl.pl that functions more like growlnotify.

Usage: ${0##*/} [options] message
 -a, --application NAME   Name of the application sending the message.
 -e, --event NAME         The name of the Event part of the notification. This
                          is generally the action which occurs, such as disk
                          partitioning completed. (default is HOSTNAME)
 -p, --priority PRIORITY  The priority level of the notification. An integer
                          value ranging [-2, 2] or one of: Very Low, Moderate,
                          Normal, High, Emergency.
 -u, --url                Defines the message as a url, allowing the client to
                          redirect.
 -h, --help               Show this help

By default prowlnotify will check ~/.prowlapikey for an api key. Otherwise it
checks both the PROWL_API_KEY and PROWL_API_KEYFILE environment variables. With
PROWL_API_KEY being a key, and PROWL_API_KEYFILE being a file with the key as
its contents.
EOF
}
FAIL() { [[ $1 ]] && echo "$SCRIPT_NAME: $1" >&2; exit ${2:-1}; }

prowlbin=$(which prowl.pl 2>/dev/null) || FAIL "prowl.pl not found"

opt_application="-application=prowlnotify"
opt_event="-event=$HOSTNAME"
opt_is_url=
opt_key=
opt_keyfile=
opt_notification="-notification="
opt_priority=
opt_url=


# Find the api key or file containing it
[[ -n "$PROWL_API_KEY" ]] && opt_key="-apikey=${PROWL_API_KEY}"
PROWL_API_KEYFILE=${PROWL_API_KEYFILE:-~/.prowlapikey}
[[ -f "$PROWL_API_KEYFILE" ]] && opt_keyfile="-apikeyfile=${PROWL_API_KEYFILE}"

while (($#)); do
	case $1 in
		-h|--help) usage; exit 0; ;;
		-a|--application) opt_application="-application=$2"; shift ;;
		-e|--event) opt_event="-event=$2"; shift ;;
		-p|--priority)
		case "$(echo $2 | tr '[A-Z]' '[a-z]')" in
			-2|"very low") opt_priority="-priority=-2" ;;
			-1|moderate) opt_priority="-priority=-1" ;;
			0|normal) opt_priority="-priority=0" ;;
			1|high) opt_priority="-priority=1" ;;
			2|emergency) opt_priority="-priority=2" ;;
		esac
		shift
		;;
		-u|--url) opt_is_url=1 ;;
		-*|--*) FAIL "unknown option ${1}" ;;
		*) break ;;
	esac
	shift
done

[[ ! $1 && ! -p /dev/stdin ]] && echo "Enter a notification description, followed by newline, followed by Ctrl-D (End of File). To cancel, press Ctrl-C."
msg="${@:-`cat`}"

[[ $opt_is_url ]] && opt_url="-url=${msg}"

"$prowlbin" \
	"$opt_application" \
	"$opt_event" \
	"$opt_priority" \
	"$opt_key" \
	"$opt_keyfile" \
	"$opt_url" \
	"${opt_notification}${msg}"
